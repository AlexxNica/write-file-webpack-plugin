{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;oBACF,MAAM;;;;qBAER,YAAM;AACjB,WAAO;AACH,aAAK,EAAE,eAAC,QAAQ,EAAK;AACjB,oBAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,UAAC,KAAK,EAAK;AAC/B,oBAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE;AACjC,2BAAO;iBACV;;AAED,qBAAK,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAK;AACxC,yBAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAK;AAC9B,4BAAI,QAAQ,YAAA,CAAC;;AAEb,4BAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;AAC/B,kCAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;yBAClD;;AAED,gCAAQ,GAAG,kBAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;AAE7D,gCAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAC,SAAS,EAAE,IAAI,EAAK;AACvE,gCAAI,SAAS,EAAE;AACX,sCAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;6BAC9C;AACD,4CAAG,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAC,UAAU,EAAK;AACzC,oCAAI,UAAU,EAAE;AACZ,0CAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;iCAChD;6BACJ,CAAC,CAAC;yBACN,CAAC,CAAC;qBACN,CAAC,CAAC;iBACN,CAAC,CAAC;aACN,CAAC,CAAC;SACN;KACJ,CAAC;CACL","file":"index.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport default () => {\n    return {\n        apply: (compiler) => {\n            compiler.plugin('done', (stats) => {\n                if (stats.compilation.errors.length) {\n                    return;\n                }\n\n                stats.compilation.chunks.forEach((chunk) => {\n                    chunk.files.forEach((fileName) => {\n                        let filePath;\n\n                        if (!compiler.options.output.path) {\n                            throw new Error('output.path is not defined.');\n                        }\n\n                        filePath = path.join(compiler.options.output.path, fileName);\n\n                        compiler.outputFileSystem.readFile(filePath, 'utf-8', (errorRead, body) => {\n                            if (errorRead) {\n                                throw new Error('Cannot read input file.');\n                            }\n                            fs.writeFile(filePath, body, (errorWrite) => {\n                                if (errorWrite) {\n                                    throw new Error('Cannot write output file.');\n                                }\n                            });\n                        });\n                    });\n                });\n            });\n        }\n    };\n};\n"],"sourceRoot":"/source/"}